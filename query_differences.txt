Line 6:
filtered_preds.sql: SELECT AVG( singer.age ) , MIN( singer.age ) , MAX( singer.age ) FROM singer WHERE singer.country = 'French'
filtered_dev.sql: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
--------------------------------------------------
Line 16:
filtered_preds.sql: SELECT stadium.location , stadium.capacity FROM stadium WHERE stadium.capacity BETWEEN 5000 and 10000
filtered_dev.sql: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
--------------------------------------------------
Line 17:
filtered_preds.sql: SELECT MAX( stadium.capacity ) , AVG( stadium.average ) FROM stadium
filtered_dev.sql: select max(capacity), average from stadium
--------------------------------------------------
Line 18:
filtered_preds.sql: SELECT AVG( stadium.average ) , MAX( stadium.capacity ) FROM stadium
filtered_dev.sql: select avg(capacity) ,  max(capacity) from stadium
--------------------------------------------------
Line 23:
filtered_preds.sql: SELECT concert.stadium_id , COUNT( * ) FROM concert GROUP BY concert.stadium_id
filtered_dev.sql: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 24:
filtered_preds.sql: SELECT concert.year FROM concert GROUP BY concert.year ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 25:
filtered_preds.sql: SELECT concert.year FROM concert GROUP BY concert.year ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
--------------------------------------------------
Line 26:
filtered_preds.sql: SELECT singer.country FROM singer WHERE singer.age > 40 INTERSECT SELECT singer.country FROM singer WHERE singer.age<30
filtered_dev.sql: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
--------------------------------------------------
Line 28:
filtered_preds.sql: SELECT singer.name , singer.country FROM singer WHERE singer.song_name LIKE '%Hey%'
filtered_dev.sql: SELECT count(*) FROM pets WHERE weight  >  10
--------------------------------------------------
Line 30:
filtered_preds.sql: SELECT COUNT( * ) FROM pets WHERE pets.weight > 10
filtered_dev.sql: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
--------------------------------------------------
Line 32:
filtered_preds.sql: SELECT pets.weight FROM pets WHERE pets.pettype = 'dog' AND pets.pet_age = (SELECT MIN( pets.pet_age ) FROM pets)
filtered_dev.sql: SELECT max(weight) ,  petType FROM pets GROUP BY petType
--------------------------------------------------
Line 33:
filtered_preds.sql: SELECT pets.pettype , MAX( pets.weight ) FROM pets GROUP BY pets.pettype
filtered_dev.sql: SELECT max(weight) ,  petType FROM pets GROUP BY petType
--------------------------------------------------
Line 34:
filtered_preds.sql: SELECT pets.pettype , MAX( pets.weight ) , MAX( pets.weight ) FROM pets GROUP BY pets.pettype
filtered_dev.sql: SELECT count(DISTINCT pettype) FROM pets
--------------------------------------------------
Line 35:
filtered_preds.sql: SELECT COUNT( DISTINCT pets.pettype ) FROM pets
filtered_dev.sql: SELECT count(DISTINCT pettype) FROM pets
--------------------------------------------------
Line 36:
filtered_preds.sql: SELECT COUNT( DISTINCT pets.pettype ) FROM pets
filtered_dev.sql: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
--------------------------------------------------
Line 38:
filtered_preds.sql: SELECT pets.pettype , pets.weight FROM pets ORDER BY pets.pet_age ASC LIMIT 1
filtered_dev.sql: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
--------------------------------------------------
Line 40:
filtered_preds.sql: SELECT pets.petid , pets.weight FROM pets WHERE pets.pet_age > 1
filtered_dev.sql: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
--------------------------------------------------
Line 41:
filtered_preds.sql: SELECT pets.pettype , AVG( pets.weight ) FROM pets GROUP BY pets.pettype
filtered_dev.sql: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
--------------------------------------------------
Line 42:
filtered_preds.sql: SELECT pets.pettype , AVG( pets.weight ) FROM pets GROUP BY pets.pettype
filtered_dev.sql: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
--------------------------------------------------
Line 43:
filtered_preds.sql: SELECT has_pet.stuid , COUNT( * ) FROM has_pet GROUP BY has_pet.stuid
filtered_dev.sql: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
--------------------------------------------------
Line 48:
filtered_preds.sql: SELECT COUNT( * ) FROM car_makers WHERE car_makers.country = 'france'
filtered_dev.sql: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
--------------------------------------------------
Line 49:
filtered_preds.sql: SELECT COUNT( * ) FROM car_makers WHERE car_makers.country = 'United States'
filtered_dev.sql: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
--------------------------------------------------
Line 50:
filtered_preds.sql: SELECT AVG( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 4
filtered_dev.sql: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
--------------------------------------------------
Line 51:
filtered_preds.sql: SELECT AVG( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = 4
filtered_dev.sql: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
--------------------------------------------------
Line 52:
filtered_preds.sql: SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
filtered_dev.sql: SELECT Maker ,  Model FROM MODEL_LIST;
--------------------------------------------------
Line 53:
filtered_preds.sql: SELECT MIN( cars_data.weight ) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974
filtered_dev.sql: SELECT Maker ,  Model FROM MODEL_LIST;
--------------------------------------------------
Line 56:
filtered_preds.sql: SELECT AVG( cars_data.weight ) , cars_data.year FROM cars_data GROUP BY cars_data.year
filtered_dev.sql: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
--------------------------------------------------
Line 57:
filtered_preds.sql: SELECT cars_data.year , AVG( cars_data.weight ) FROM cars_data GROUP BY cars_data.year
filtered_dev.sql: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
--------------------------------------------------
Line 58:
filtered_preds.sql: SELECT AVG( cars_data.horsepower ) FROM cars_data WHERE cars_data.year<1980
filtered_dev.sql: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
--------------------------------------------------
Line 59:
filtered_preds.sql: SELECT AVG( cars_data.horsepower ) FROM cars_data WHERE cars_data.year<1980
filtered_dev.sql: select avg(horsepower) from cars_data where year  <  1980;
--------------------------------------------------
Line 60:
filtered_preds.sql: SELECT MAX( cars_data.accelerate ) , cars_data.cylinders FROM cars_data GROUP BY cars_data.cylinders
filtered_dev.sql: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
--------------------------------------------------
Line 61:
filtered_preds.sql: SELECT cars_data.cylinders , MAX( cars_data.accelerate ) FROM cars_data GROUP BY cars_data.cylinders
filtered_dev.sql: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
--------------------------------------------------
Line 68:
filtered_preds.sql: SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000
filtered_dev.sql: select distinct year from cars_data where weight between 3000 and 4000;
--------------------------------------------------
Line 69:
filtered_preds.sql: SELECT cars_data.year FROM cars_data WHERE cars_data.weight<4000 INTERSECT SELECT cars_data.year FROM cars_data WHERE cars_data.weight > 3000
filtered_dev.sql: select distinct year from cars_data where weight between 3000 and 4000;
--------------------------------------------------
Line 76:
filtered_preds.sql: SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' AND cars_data.year<1980
filtered_dev.sql: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
--------------------------------------------------
Line 77:
filtered_preds.sql: SELECT MAX( cars_data.mpg ) FROM cars_data WHERE cars_data.cylinders = '8' OR cars_data.year<1980
filtered_dev.sql: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
--------------------------------------------------
Line 105:
filtered_preds.sql: SELECT flights.flightno FROM flights WHERE flights.sourceairport = 'APG'
filtered_dev.sql: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
--------------------------------------------------
Line 106:
filtered_preds.sql: SELECT COUNT( * ) FROM employee
filtered_dev.sql: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
--------------------------------------------------
Line 107:
filtered_preds.sql: SELECT COUNT( * ) FROM employee
filtered_dev.sql: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
--------------------------------------------------
Line 108:
filtered_preds.sql: SELECT employee.name FROM employee ORDER BY employee.age ASC
filtered_dev.sql: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
--------------------------------------------------
Line 109:
filtered_preds.sql: SELECT employee.name FROM employee ORDER BY employee.age ASC
filtered_dev.sql: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
--------------------------------------------------
Line 110:
filtered_preds.sql: SELECT employee.city , COUNT( * ) FROM employee GROUP BY employee.city
filtered_dev.sql: SELECT count(*) FROM employee
--------------------------------------------------
Line 111:
filtered_preds.sql: SELECT employee.city , COUNT( * ) FROM employee GROUP BY employee.city
filtered_dev.sql: SELECT count(*) FROM employee
--------------------------------------------------
Line 112:
filtered_preds.sql: SELECT employee.city FROM employee WHERE employee.age<30 GROUP BY employee.city HAVING COUNT( * ) > 1
filtered_dev.sql: SELECT name FROM employee ORDER BY age
--------------------------------------------------
Line 113:
filtered_preds.sql: SELECT employee.city FROM employee WHERE employee.age<30 GROUP BY employee.city HAVING COUNT( * ) > 1
filtered_dev.sql: SELECT name FROM employee ORDER BY age
--------------------------------------------------
Line 114:
filtered_preds.sql: SELECT COUNT( * ) , shop.location FROM shop GROUP BY shop.location
filtered_dev.sql: SELECT count(*) ,  city FROM employee GROUP BY city
--------------------------------------------------
Line 115:
filtered_preds.sql: SELECT COUNT( * ) , shop.location FROM shop GROUP BY shop.location
filtered_dev.sql: SELECT count(*) ,  city FROM employee GROUP BY city
--------------------------------------------------
Line 116:
filtered_preds.sql: SELECT shop.manager_name , shop.district FROM shop ORDER BY shop.number_products DESC LIMIT 1
filtered_dev.sql: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
--------------------------------------------------
Line 117:
filtered_preds.sql: SELECT shop.manager_name , shop.district FROM shop ORDER BY shop.number_products DESC LIMIT 1
filtered_dev.sql: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
--------------------------------------------------
Line 118:
filtered_preds.sql: SELECT MIN( shop.number_products ) , MAX( shop.number_products ) FROM shop
filtered_dev.sql: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
--------------------------------------------------
Line 119:
filtered_preds.sql: SELECT MIN( shop.number_products ) , MAX( shop.number_products ) FROM shop
filtered_dev.sql: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
--------------------------------------------------
Line 120:
filtered_preds.sql: SELECT shop.name , shop.location , shop.district FROM shop ORDER BY shop.number_products DESC
filtered_dev.sql: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
--------------------------------------------------
Line 121:
filtered_preds.sql: SELECT shop.name , shop.location , shop.district FROM shop ORDER BY shop.number_products DESC
filtered_dev.sql: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
--------------------------------------------------
Line 122:
filtered_preds.sql: SELECT shop.name FROM shop WHERE shop.number_products > (SELECT AVG( shop.number_products ) FROM shop)
filtered_dev.sql: SELECT min(Number_products) ,  max(Number_products) FROM shop
--------------------------------------------------
Line 123:
filtered_preds.sql: SELECT shop.name FROM shop WHERE shop.number_products > (SELECT AVG( shop.number_products ) FROM shop)
filtered_dev.sql: SELECT min(Number_products) ,  max(Number_products) FROM shop
--------------------------------------------------
Line 124:
filtered_preds.sql: SELECT SUM( evaluation.bonus ) FROM evaluation
filtered_dev.sql: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
--------------------------------------------------
Line 125:
filtered_preds.sql: SELECT SUM( evaluation.bonus ) FROM evaluation
filtered_dev.sql: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
--------------------------------------------------
Line 126:
filtered_preds.sql: SELECT * FROM hiring
filtered_dev.sql: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
--------------------------------------------------
Line 127:
filtered_preds.sql: SELECT * FROM hiring
filtered_dev.sql: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
--------------------------------------------------
Line 128:
filtered_preds.sql: SELECT shop.district FROM shop WHERE shop.number_products<3000 INTERSECT SELECT shop.district FROM shop WHERE shop.number_products > 10000
filtered_dev.sql: SELECT sum(bonus) FROM evaluation
--------------------------------------------------
Line 129:
filtered_preds.sql: SELECT shop.district FROM shop WHERE shop.number_products<3000 INTERSECT SELECT shop.district FROM shop WHERE shop.number_products > 10000
filtered_dev.sql: SELECT sum(bonus) FROM evaluation
--------------------------------------------------
Line 130:
filtered_preds.sql: SELECT COUNT( DISTINCT shop.location ) FROM shop
filtered_dev.sql: SELECT * FROM hiring
--------------------------------------------------
Line 131:
filtered_preds.sql: SELECT COUNT( DISTINCT shop.location ) FROM shop
filtered_dev.sql: SELECT * FROM hiring
--------------------------------------------------
Line 132:
filtered_preds.sql: SELECT COUNT( * ) FROM documents
filtered_dev.sql: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
--------------------------------------------------
Line 133:
filtered_preds.sql: SELECT COUNT( * ) FROM documents
filtered_dev.sql: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
--------------------------------------------------
Line 134:
filtered_preds.sql: SELECT documents.document_id , documents.document_name , documents.document_description FROM documents
filtered_dev.sql: SELECT count(DISTINCT LOCATION) FROM shop
--------------------------------------------------
Line 135:
filtered_preds.sql: SELECT documents.document_id , documents.document_name , documents.document_description FROM documents
filtered_dev.sql: SELECT count(DISTINCT LOCATION) FROM shop
--------------------------------------------------
Line 136:
filtered_preds.sql: SELECT documents.document_name , documents.template_id FROM documents WHERE documents.document_description LIKE '%w%'
filtered_dev.sql: SELECT count(*) FROM Documents
--------------------------------------------------
Line 137:
filtered_preds.sql: SELECT documents.document_name , documents.template_id FROM documents WHERE documents.document_description LIKE '%w%'
filtered_dev.sql: SELECT count(*) FROM Documents
--------------------------------------------------
Line 138:
filtered_preds.sql: SELECT documents.document_id , documents.template_id , documents.document_description FROM documents WHERE documents.document_name = 'Robbin CV'
filtered_dev.sql: SELECT document_id ,  document_name ,  document_description FROM Documents
--------------------------------------------------
Line 139:
filtered_preds.sql: SELECT documents.document_id , documents.template_id , documents.document_description FROM documents WHERE documents.document_name = 'Robbin CV'
filtered_dev.sql: SELECT document_id ,  document_name ,  document_description FROM Documents
--------------------------------------------------
Line 140:
filtered_preds.sql: SELECT COUNT( DISTINCT documents.template_id ) FROM documents
filtered_dev.sql: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
--------------------------------------------------
Line 141:
filtered_preds.sql: SELECT COUNT( DISTINCT documents.template_id ) FROM documents
filtered_dev.sql: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
--------------------------------------------------
Line 142:
filtered_preds.sql: SELECT documents.template_id , COUNT( * ) FROM documents GROUP BY documents.template_id
filtered_dev.sql: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
--------------------------------------------------
Line 143:
filtered_preds.sql: SELECT documents.template_id , COUNT( * ) FROM documents GROUP BY documents.template_id
filtered_dev.sql: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
--------------------------------------------------
Line 144:
filtered_preds.sql: SELECT documents.template_id FROM documents GROUP BY documents.template_id HAVING COUNT( * ) > 1
filtered_dev.sql: SELECT count(DISTINCT template_id) FROM Documents
--------------------------------------------------
Line 145:
filtered_preds.sql: SELECT documents.template_id FROM documents GROUP BY documents.template_id HAVING COUNT( * ) > 1
filtered_dev.sql: SELECT count(DISTINCT template_id) FROM Documents
--------------------------------------------------
Line 146:
filtered_preds.sql: SELECT COUNT( * ) FROM templates
filtered_dev.sql: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
--------------------------------------------------
Line 147:
filtered_preds.sql: SELECT COUNT( * ) FROM templates
filtered_dev.sql: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
--------------------------------------------------
Line 148:
filtered_preds.sql: SELECT templates.template_id , templates.version_number , templates.template_type_code FROM templates
filtered_dev.sql: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
--------------------------------------------------
Line 149:
filtered_preds.sql: SELECT templates.template_id , templates.version_number , templates.template_type_code FROM templates
filtered_dev.sql: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
--------------------------------------------------
Line 150:
filtered_preds.sql: SELECT DISTINCT templates.template_type_code FROM templates
filtered_dev.sql: SELECT count(*) FROM Templates
--------------------------------------------------
Line 151:
filtered_preds.sql: SELECT DISTINCT templates.template_type_code FROM templates
filtered_dev.sql: SELECT count(*) FROM Templates
--------------------------------------------------
Line 152:
filtered_preds.sql: SELECT templates.template_id FROM templates WHERE templates.template_type_code = 'PP' OR templates.template_type_code = 'PPT'
filtered_dev.sql: SELECT template_id ,  version_number ,  template_type_code FROM Templates
--------------------------------------------------
Line 153:
filtered_preds.sql: SELECT templates.template_id FROM templates WHERE templates.template_type_code = 'PP' OR templates.template_type_code = 'PPT'
filtered_dev.sql: SELECT template_id ,  version_number ,  template_type_code FROM Templates
--------------------------------------------------
Line 154:
filtered_preds.sql: SELECT COUNT( * ) FROM templates WHERE templates.template_type_code = 'CV'
filtered_dev.sql: SELECT DISTINCT template_type_code FROM Templates
--------------------------------------------------
Line 155:
filtered_preds.sql: SELECT COUNT( * ) FROM templates WHERE templates.template_type_code = 'CV'
filtered_dev.sql: SELECT DISTINCT template_type_code FROM Templates
--------------------------------------------------
Line 156:
filtered_preds.sql: SELECT templates.version_number , templates.template_type_code FROM templates WHERE templates.version_number > 5
filtered_dev.sql: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
--------------------------------------------------
Line 157:
filtered_preds.sql: SELECT templates.version_number , templates.template_type_code FROM templates WHERE templates.version_number > 5
filtered_dev.sql: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
--------------------------------------------------
Line 158:
filtered_preds.sql: SELECT templates.template_type_code , COUNT( * ) FROM templates GROUP BY templates.template_type_code
filtered_dev.sql: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
--------------------------------------------------
Line 159:
filtered_preds.sql: SELECT templates.template_type_code , COUNT( * ) FROM templates GROUP BY templates.template_type_code
filtered_dev.sql: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
--------------------------------------------------
Line 160:
filtered_preds.sql: SELECT templates.template_type_code FROM templates GROUP BY templates.template_type_code ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
--------------------------------------------------
Line 161:
filtered_preds.sql: SELECT templates.template_type_code FROM templates GROUP BY templates.template_type_code ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
--------------------------------------------------
Line 162:
filtered_preds.sql: SELECT templates.template_type_code FROM templates GROUP BY templates.template_type_code HAVING COUNT( * )<3
filtered_dev.sql: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
--------------------------------------------------
Line 163:
filtered_preds.sql: SELECT templates.template_type_code FROM templates GROUP BY templates.template_type_code HAVING COUNT( * )<3
filtered_dev.sql: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
--------------------------------------------------
Line 164:
filtered_preds.sql: SELECT MIN( templates.version_number ) , templates.template_type_code FROM templates
filtered_dev.sql: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 165:
filtered_preds.sql: SELECT templates.version_number , templates.template_type_code FROM templates ORDER BY templates.version_number ASC LIMIT 1
filtered_dev.sql: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 166:
filtered_preds.sql: SELECT ref_template_types.template_type_code , ref_template_types.template_type_description FROM ref_template_types
filtered_dev.sql: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
--------------------------------------------------
Line 167:
filtered_preds.sql: SELECT ref_template_types.template_type_code , ref_template_types.template_type_description FROM ref_template_types
filtered_dev.sql: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
--------------------------------------------------
Line 168:
filtered_preds.sql: SELECT ref_template_types.template_type_description FROM ref_template_types WHERE ref_template_types.template_type_code = 'AD'
filtered_dev.sql: SELECT min(Version_Number) ,  template_type_code FROM Templates
--------------------------------------------------
Line 169:
filtered_preds.sql: SELECT ref_template_types.template_type_description FROM ref_template_types WHERE ref_template_types.template_type_code = 'AD'
filtered_dev.sql: SELECT min(Version_Number) ,  template_type_code FROM Templates
--------------------------------------------------
Line 170:
filtered_preds.sql: SELECT ref_template_types.template_type_code FROM ref_template_types WHERE ref_template_types.template_type_description = 'Book'
filtered_dev.sql: SELECT template_type_code ,  template_type_description FROM Ref_template_types
--------------------------------------------------
Line 171:
filtered_preds.sql: SELECT ref_template_types.template_type_code FROM ref_template_types WHERE ref_template_types.template_type_description = 'Book'
filtered_dev.sql: SELECT template_type_code ,  template_type_description FROM Ref_template_types
--------------------------------------------------
Line 172:
filtered_preds.sql: SELECT COUNT( * ) FROM paragraphs
filtered_dev.sql: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
--------------------------------------------------
Line 173:
filtered_preds.sql: SELECT COUNT( * ) FROM paragraphs
filtered_dev.sql: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
--------------------------------------------------
Line 174:
filtered_preds.sql: SELECT paragraphs.other_details FROM paragraphs WHERE paragraphs.paragraph_text = 'Korea'
filtered_dev.sql: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
--------------------------------------------------
Line 175:
filtered_preds.sql: SELECT paragraphs.other_details FROM paragraphs WHERE paragraphs.paragraph_text LIKE '%Korea%'
filtered_dev.sql: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
--------------------------------------------------
Line 176:
filtered_preds.sql: SELECT paragraphs.document_id , COUNT( * ) FROM paragraphs GROUP BY paragraphs.document_id
filtered_dev.sql: SELECT count(*) FROM Paragraphs
--------------------------------------------------
Line 177:
filtered_preds.sql: SELECT paragraphs.document_id , COUNT( * ) FROM paragraphs GROUP BY paragraphs.document_id ORDER BY paragraphs.document_id ASC
filtered_dev.sql: SELECT count(*) FROM Paragraphs
--------------------------------------------------
Line 178:
filtered_preds.sql: SELECT paragraphs.document_id FROM paragraphs GROUP BY paragraphs.document_id HAVING COUNT( * ) >= 2
filtered_dev.sql: select other_details from paragraphs where paragraph_text like 'korea'
--------------------------------------------------
Line 179:
filtered_preds.sql: SELECT paragraphs.document_id FROM paragraphs GROUP BY paragraphs.document_id HAVING COUNT( * ) >= 2
filtered_dev.sql: select other_details from paragraphs where paragraph_text like 'korea'
--------------------------------------------------
Line 180:
filtered_preds.sql: SELECT paragraphs.document_id FROM paragraphs GROUP BY paragraphs.document_id ORDER BY COUNT( * ) ASC LIMIT 1
filtered_dev.sql: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
--------------------------------------------------
Line 181:
filtered_preds.sql: SELECT paragraphs.document_id FROM paragraphs GROUP BY paragraphs.document_id ORDER BY COUNT( * ) ASC LIMIT 1
filtered_dev.sql: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
--------------------------------------------------
Line 185:
filtered_preds.sql: SELECT COUNT( * ) FROM teacher
filtered_dev.sql: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
--------------------------------------------------
Line 186:
filtered_preds.sql: SELECT COUNT( * ) FROM teacher
filtered_dev.sql: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
--------------------------------------------------
Line 187:
filtered_preds.sql: SELECT teacher.name FROM teacher ORDER BY teacher.age ASC
filtered_dev.sql: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
--------------------------------------------------
Line 188:
filtered_preds.sql: SELECT teacher.name FROM teacher ORDER BY teacher.age ASC
filtered_dev.sql: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
--------------------------------------------------
Line 189:
filtered_preds.sql: SELECT teacher.age , teacher.hometown FROM teacher
filtered_dev.sql: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
--------------------------------------------------
Line 190:
filtered_preds.sql: SELECT teacher.age , teacher.hometown FROM teacher
filtered_dev.sql: SELECT count(*) FROM teacher
--------------------------------------------------
Line 191:
filtered_preds.sql: SELECT teacher.name FROM teacher WHERE teacher.hometown != 'Little Lever Urban District'
filtered_dev.sql: SELECT count(*) FROM teacher
--------------------------------------------------
Line 194:
filtered_preds.sql: SELECT teacher.name FROM teacher WHERE teacher.age = 32 OR teacher.age = 33
filtered_dev.sql: SELECT Age ,  Hometown FROM teacher
--------------------------------------------------
Line 195:
filtered_preds.sql: SELECT teacher.hometown FROM teacher ORDER BY teacher.age ASC LIMIT 1
filtered_dev.sql: SELECT Age ,  Hometown FROM teacher
--------------------------------------------------
Line 196:
filtered_preds.sql: SELECT teacher.hometown FROM teacher ORDER BY teacher.age ASC LIMIT 1
filtered_dev.sql: select name from teacher where hometown != "little lever urban district"
--------------------------------------------------
Line 197:
filtered_preds.sql: SELECT teacher.hometown , COUNT( * ) FROM teacher GROUP BY teacher.hometown
filtered_dev.sql: select name from teacher where hometown != "little lever urban district"
--------------------------------------------------
Line 198:
filtered_preds.sql: SELECT teacher.hometown , COUNT( * ) FROM teacher GROUP BY teacher.hometown
filtered_dev.sql: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
--------------------------------------------------
Line 199:
filtered_preds.sql: SELECT teacher.hometown FROM teacher GROUP BY teacher.hometown ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
--------------------------------------------------
Line 202:
filtered_preds.sql: SELECT teacher.hometown FROM teacher GROUP BY teacher.hometown HAVING COUNT( * ) >= 2
filtered_dev.sql: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
--------------------------------------------------
Line 203:
filtered_preds.sql: SELECT COUNT( * ) FROM visitor WHERE visitor.age<30
filtered_dev.sql: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
--------------------------------------------------
Line 204:
filtered_preds.sql: SELECT visitor.name FROM visitor WHERE visitor.level_of_membership > 4 ORDER BY visitor.level_of_membership DESC
filtered_dev.sql: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
--------------------------------------------------
Line 205:
filtered_preds.sql: SELECT AVG( visitor.age ) FROM visitor WHERE visitor.level_of_membership <= 4
filtered_dev.sql: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
--------------------------------------------------
Line 206:
filtered_preds.sql: SELECT visitor.name , visitor.level_of_membership FROM visitor WHERE visitor.level_of_membership > 4 ORDER BY visitor.age DESC
filtered_dev.sql: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
--------------------------------------------------
Line 207:
filtered_preds.sql: SELECT museum.museum_id , museum.name FROM museum ORDER BY museum.num_of_staff DESC LIMIT 1
filtered_dev.sql: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
--------------------------------------------------
Line 208:
filtered_preds.sql: SELECT AVG( museum.num_of_staff ) FROM museum WHERE museum.open_year<2009
filtered_dev.sql: SELECT count(*) FROM visitor WHERE age  <  30
--------------------------------------------------
Line 209:
filtered_preds.sql: SELECT museum.open_year , museum.num_of_staff FROM museum WHERE museum.name = 'Plaza Museum'
filtered_dev.sql: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
--------------------------------------------------
Line 210:
filtered_preds.sql: SELECT museum.name FROM museum WHERE museum.num_of_staff<(SELECT MIN( museum.num_of_staff ) FROM museum WHERE museum.open_year > 2010)
filtered_dev.sql: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
--------------------------------------------------
Line 211:
filtered_preds.sql: SELECT AVG( visit.num_of_ticket ) , MAX( visit.num_of_ticket ) FROM visit
filtered_dev.sql: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
--------------------------------------------------
Line 212:
filtered_preds.sql: SELECT COUNT( * ) FROM museum WHERE museum.open_year > 2013 OR museum.open_year<2008
filtered_dev.sql: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
--------------------------------------------------
Line 213:
filtered_preds.sql: SELECT COUNT( * ) FROM players
filtered_dev.sql: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
--------------------------------------------------
Line 214:
filtered_preds.sql: SELECT COUNT( * ) FROM players
filtered_dev.sql: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
--------------------------------------------------
Line 215:
filtered_preds.sql: SELECT COUNT( * ) FROM matches
filtered_dev.sql: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
--------------------------------------------------
Line 216:
filtered_preds.sql: SELECT COUNT( * ) FROM matches
filtered_dev.sql: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
--------------------------------------------------
Line 217:
filtered_preds.sql: SELECT players.first_name , players.birth_date FROM players WHERE players.country_code = 'USA'
filtered_dev.sql: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
--------------------------------------------------
Line 218:
filtered_preds.sql: SELECT players.first_name , players.birth_date FROM players WHERE players.country_code = 'USA'
filtered_dev.sql: SELECT count(*) FROM players
--------------------------------------------------
Line 219:
filtered_preds.sql: SELECT AVG( matches.loser_age ) , AVG( matches.winner_age ) FROM matches
filtered_dev.sql: SELECT count(*) FROM players
--------------------------------------------------
Line 220:
filtered_preds.sql: SELECT AVG( matches.loser_age ) , AVG( matches.winner_age ) FROM matches
filtered_dev.sql: SELECT count(*) FROM matches
--------------------------------------------------
Line 221:
filtered_preds.sql: SELECT AVG( matches.winner_rank ) FROM matches
filtered_dev.sql: SELECT count(*) FROM matches
--------------------------------------------------
Line 222:
filtered_preds.sql: SELECT AVG( matches.winner_rank ) FROM matches
filtered_dev.sql: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
--------------------------------------------------
Line 223:
filtered_preds.sql: SELECT MIN( matches.loser_rank ) FROM matches
filtered_dev.sql: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
--------------------------------------------------
Line 224:
filtered_preds.sql: SELECT MIN( matches.loser_rank ) FROM matches
filtered_dev.sql: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
--------------------------------------------------
Line 225:
filtered_preds.sql: SELECT COUNT( DISTINCT players.country_code ) FROM players
filtered_dev.sql: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
--------------------------------------------------
Line 226:
filtered_preds.sql: SELECT COUNT( DISTINCT players.country_code ) FROM players
filtered_dev.sql: SELECT avg(winner_rank) FROM matches
--------------------------------------------------
Line 227:
filtered_preds.sql: SELECT COUNT( DISTINCT matches.loser_name ) FROM matches
filtered_dev.sql: SELECT avg(winner_rank) FROM matches
--------------------------------------------------
Line 228:
filtered_preds.sql: SELECT COUNT( DISTINCT matches.loser_name ) FROM matches
filtered_dev.sql: SELECT min(loser_rank) FROM matches
--------------------------------------------------
Line 229:
filtered_preds.sql: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING COUNT( * ) > 10
filtered_dev.sql: SELECT min(loser_rank) FROM matches
--------------------------------------------------
Line 230:
filtered_preds.sql: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING COUNT( * ) > 10
filtered_dev.sql: SELECT count(DISTINCT country_code) FROM players
--------------------------------------------------
Line 231:
filtered_preds.sql: SELECT matches.winner_name FROM matches WHERE matches.year = 2016 INTERSECT SELECT matches.winner_name FROM matches WHERE matches.year = 2013
filtered_dev.sql: SELECT count(DISTINCT country_code) FROM players
--------------------------------------------------
Line 232:
filtered_preds.sql: SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 OR matches.year = 2016
filtered_dev.sql: SELECT count(DISTINCT loser_name) FROM matches
--------------------------------------------------
Line 233:
filtered_preds.sql: SELECT COUNT( * ) FROM matches WHERE matches.year = 2013 OR matches.year = 2016
filtered_dev.sql: SELECT count(DISTINCT loser_name) FROM matches
--------------------------------------------------
Line 234:
filtered_preds.sql: SELECT players.first_name , players.country_code FROM players ORDER BY players.birth_date ASC LIMIT 1
filtered_dev.sql: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
--------------------------------------------------
Line 235:
filtered_preds.sql: SELECT players.first_name , players.country_code FROM players ORDER BY players.birth_date ASC LIMIT 1
filtered_dev.sql: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
--------------------------------------------------
Line 236:
filtered_preds.sql: SELECT players.first_name , players.last_name FROM players ORDER BY players.birth_date ASC
filtered_dev.sql: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
--------------------------------------------------
Line 237:
filtered_preds.sql: SELECT players.first_name , players.last_name FROM players ORDER BY players.birth_date ASC
filtered_dev.sql: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
--------------------------------------------------
Line 238:
filtered_preds.sql: SELECT players.first_name , players.last_name FROM players WHERE players.hand = 'L' ORDER BY players.birth_date ASC
filtered_dev.sql: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
--------------------------------------------------
Line 239:
filtered_preds.sql: SELECT players.first_name , players.last_name FROM players WHERE players.hand = 'left' ORDER BY players.birth_date ASC
filtered_dev.sql: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
--------------------------------------------------
Line 240:
filtered_preds.sql: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
--------------------------------------------------
Line 241:
filtered_preds.sql: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
--------------------------------------------------
Line 242:
filtered_preds.sql: SELECT matches.winner_name , COUNT( * ) , matches.winner_rank_points FROM matches GROUP BY matches.winner_name ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT first_name ,  last_name FROM players ORDER BY birth_date
--------------------------------------------------
Line 243:
filtered_preds.sql: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
filtered_dev.sql: SELECT first_name ,  last_name FROM players ORDER BY birth_date
--------------------------------------------------
Line 244:
filtered_preds.sql: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
filtered_dev.sql: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
--------------------------------------------------
Line 245:
filtered_preds.sql: SELECT matches.loser_name , matches.winner_name FROM matches ORDER BY matches.minutes DESC LIMIT 1
filtered_dev.sql: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
--------------------------------------------------
Line 246:
filtered_preds.sql: SELECT matches.winner_name , matches.loser_name FROM matches ORDER BY matches.minutes DESC LIMIT 1
filtered_dev.sql: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 247:
filtered_preds.sql: SELECT players.country_code , COUNT( * ) FROM players GROUP BY players.country_code
filtered_dev.sql: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 248:
filtered_preds.sql: SELECT players.country_code , COUNT( * ) FROM players GROUP BY players.country_code
filtered_dev.sql: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 249:
filtered_preds.sql: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 250:
filtered_preds.sql: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
--------------------------------------------------
Line 251:
filtered_preds.sql: SELECT players.country_code FROM players GROUP BY players.country_code HAVING COUNT( * ) > 50
filtered_dev.sql: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
--------------------------------------------------
Line 252:
filtered_preds.sql: SELECT players.country_code FROM players GROUP BY players.country_code HAVING COUNT( * ) > 50
filtered_dev.sql: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
--------------------------------------------------
Line 253:
filtered_preds.sql: SELECT rankings.ranking_date , SUM( rankings.tours ) FROM rankings GROUP BY rankings.ranking_date
filtered_dev.sql: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
--------------------------------------------------
Line 254:
filtered_preds.sql: SELECT rankings.ranking_date , SUM( rankings.tours ) FROM rankings GROUP BY rankings.ranking_date
filtered_dev.sql: SELECT count(*) ,  country_code FROM players GROUP BY country_code
--------------------------------------------------
Line 255:
filtered_preds.sql: SELECT matches.year , COUNT( * ) FROM matches GROUP BY matches.year
filtered_dev.sql: SELECT count(*) ,  country_code FROM players GROUP BY country_code
--------------------------------------------------
Line 256:
filtered_preds.sql: SELECT matches.year , COUNT( * ) FROM matches GROUP BY matches.year
filtered_dev.sql: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 257:
filtered_preds.sql: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
filtered_dev.sql: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 258:
filtered_preds.sql: SELECT players.hand , COUNT( * ) FROM players GROUP BY players.hand
filtered_dev.sql: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
--------------------------------------------------
Line 259:
filtered_preds.sql: SELECT players.hand , COUNT( * ) FROM players GROUP BY players.hand
filtered_dev.sql: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
--------------------------------------------------
Line 260:
filtered_preds.sql: SELECT ship.name , ship.tonnage FROM ship ORDER BY ship.name DESC
filtered_dev.sql: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
--------------------------------------------------
Line 261:
filtered_preds.sql: SELECT battle.name , battle.date , battle.result FROM battle
filtered_dev.sql: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
--------------------------------------------------
Line 262:
filtered_preds.sql: SELECT MAX( death.killed ) , MIN( death.killed ) FROM death
filtered_dev.sql: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
--------------------------------------------------
Line 263:
filtered_preds.sql: SELECT AVG( death.injured ) FROM death
filtered_dev.sql: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
--------------------------------------------------
Line 264:
filtered_preds.sql: SELECT battle.name , battle.result FROM battle WHERE battle.bulgarian_commander != 'Boril'
filtered_dev.sql: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
--------------------------------------------------
Line 265:
filtered_preds.sql: SELECT DISTINCT battle.name FROM battle WHERE battle.bulgarian_commander = 'Kaloyan' AND battle.latin_commander = 'Baldwin I'
filtered_dev.sql: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
--------------------------------------------------
Line 266:
filtered_preds.sql: SELECT COUNT( DISTINCT battle.result ) FROM battle
filtered_dev.sql: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
--------------------------------------------------
Line 267:
filtered_preds.sql: SELECT addresses.line_1 FROM addresses INTERSECT SELECT addresses.line_2 FROM addresses
filtered_dev.sql: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
--------------------------------------------------
Line 268:
filtered_preds.sql: SELECT addresses.line_1 , addresses.line_2 FROM addresses
filtered_dev.sql: SELECT count(*) ,  hand FROM players GROUP BY hand
--------------------------------------------------
Line 269:
filtered_preds.sql: SELECT COUNT( * ) FROM courses
filtered_dev.sql: SELECT count(*) ,  hand FROM players GROUP BY hand
--------------------------------------------------
Line 270:
filtered_preds.sql: SELECT COUNT( * ) FROM courses
filtered_dev.sql: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
--------------------------------------------------
Line 271:
filtered_preds.sql: SELECT courses.course_description FROM courses WHERE courses.course_name = 'math'
filtered_dev.sql: SELECT name ,  tonnage FROM ship ORDER BY name DESC
--------------------------------------------------
Line 272:
filtered_preds.sql: SELECT courses.course_description FROM courses WHERE courses.course_name = 'math'
filtered_dev.sql: SELECT name ,  date FROM battle
--------------------------------------------------
Line 273:
filtered_preds.sql: SELECT addresses.zip_postcode FROM addresses WHERE addresses.city = 'Port Chelsea'
filtered_dev.sql: SELECT max(killed) ,  min(killed) FROM death
--------------------------------------------------
Line 274:
filtered_preds.sql: SELECT addresses.zip_postcode FROM addresses WHERE addresses.city = 'Port Chelsea'
filtered_dev.sql: SELECT avg(injured) FROM death
--------------------------------------------------
Line 275:
filtered_preds.sql: SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs
filtered_dev.sql: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
--------------------------------------------------
Line 276:
filtered_preds.sql: SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs
filtered_dev.sql: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
--------------------------------------------------
Line 277:
filtered_preds.sql: SELECT COUNT( DISTINCT degree_programs.degree_summary_name ) FROM degree_programs
filtered_dev.sql: SELECT count(DISTINCT RESULT) FROM battle
--------------------------------------------------
Line 278:
filtered_preds.sql: SELECT COUNT( * ) FROM degree_programs
filtered_dev.sql: SELECT note FROM death WHERE note LIKE '%East%'
--------------------------------------------------
Line 279:
filtered_preds.sql: SELECT sections.section_name , sections.section_description FROM sections
filtered_dev.sql: SELECT line_1 ,  line_2 FROM addresses
--------------------------------------------------
Line 280:
filtered_preds.sql: SELECT sections.section_name , sections.section_description FROM sections
filtered_dev.sql: SELECT line_1 ,  line_2 FROM addresses
--------------------------------------------------
Line 281:
filtered_preds.sql: SELECT sections.section_name FROM sections ORDER BY sections.section_name ASC
filtered_dev.sql: SELECT count(*) FROM Courses
--------------------------------------------------
Line 282:
filtered_preds.sql: SELECT sections.section_name FROM sections ORDER BY sections.section_name ASC
filtered_dev.sql: SELECT count(*) FROM Courses
--------------------------------------------------
Line 283:
filtered_preds.sql: SELECT departments.department_description FROM departments WHERE departments.department_name LIKE '%the computer%'
filtered_dev.sql: SELECT course_description FROM Courses WHERE course_name  =  'math'
--------------------------------------------------
Line 284:
filtered_preds.sql: SELECT departments.department_description FROM departments WHERE departments.department_name LIKE '%computer%'
filtered_dev.sql: SELECT course_description FROM Courses WHERE course_name  =  'math'
--------------------------------------------------
Line 285:
filtered_preds.sql: SELECT students.ssn FROM students WHERE students.first_name = 'Timmothy' AND students.last_name = 'Ward'
filtered_dev.sql: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
--------------------------------------------------
Line 286:
filtered_preds.sql: SELECT students.cell_mobile_number FROM students WHERE students.first_name = 'Timmothy' AND students.last_name = 'Ward'
filtered_dev.sql: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
--------------------------------------------------
Line 287:
filtered_preds.sql: SELECT students.first_name , students.middle_name , students.last_name FROM students ORDER BY students.date_first_registered ASC LIMIT 1
filtered_dev.sql: SELECT count(DISTINCT department_id) FROM Degree_Programs
--------------------------------------------------
Line 288:
filtered_preds.sql: SELECT students.first_name , students.middle_name , students.last_name FROM students ORDER BY students.date_first_registered ASC LIMIT 1
filtered_dev.sql: SELECT count(DISTINCT department_id) FROM Degree_Programs
--------------------------------------------------
Line 289:
filtered_preds.sql: SELECT students.first_name , students.permanent_address_id FROM students WHERE students.permanent_address_id IN (SELECT MAX( students.ssn ) FROM students)
filtered_dev.sql: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
--------------------------------------------------
Line 290:
filtered_preds.sql: SELECT students.first_name FROM students WHERE students.permanent_address_id<(SELECT MAX( students.ssn ) FROM students)
filtered_dev.sql: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
--------------------------------------------------
Line 291:
filtered_preds.sql: SELECT AVG( transcripts.other_details ) FROM transcripts
filtered_dev.sql: SELECT section_name ,  section_description FROM Sections
--------------------------------------------------
Line 292:
filtered_preds.sql: SELECT AVG( transcripts.transcript_date ) FROM transcripts
filtered_dev.sql: SELECT section_name ,  section_description FROM Sections
--------------------------------------------------
Line 293:
filtered_preds.sql: SELECT transcripts.transcript_date FROM transcripts ORDER BY transcripts.transcript_date ASC LIMIT 1
filtered_dev.sql: SELECT section_name FROM Sections ORDER BY section_name DESC
--------------------------------------------------
Line 294:
filtered_preds.sql: SELECT transcripts.transcript_date FROM transcripts ORDER BY transcripts.transcript_date ASC LIMIT 1
filtered_dev.sql: SELECT section_name FROM Sections ORDER BY section_name DESC
--------------------------------------------------
Line 295:
filtered_preds.sql: SELECT COUNT( * ) FROM courses
filtered_dev.sql: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
--------------------------------------------------
Line 296:
filtered_preds.sql: SELECT COUNT( * ) FROM courses
filtered_dev.sql: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
--------------------------------------------------
Line 297:
filtered_preds.sql: SELECT transcripts.transcript_date FROM transcripts ORDER BY transcripts.transcript_date DESC LIMIT 1
filtered_dev.sql: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
--------------------------------------------------
Line 298:
filtered_preds.sql: SELECT transcripts.transcript_date FROM transcripts ORDER BY transcripts.transcript_date DESC LIMIT 1
filtered_dev.sql: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
--------------------------------------------------
Line 299:
filtered_preds.sql: SELECT student_enrolment_courses.course_id , COUNT( * ) FROM student_enrolment_courses GROUP BY student_enrolment_courses.course_id ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
--------------------------------------------------
Line 300:
filtered_preds.sql: SELECT COUNT( DISTINCT students.current_address_id ) FROM students
filtered_dev.sql: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
--------------------------------------------------
Line 301:
filtered_preds.sql: SELECT DISTINCT students.current_address_id FROM students
filtered_dev.sql: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
--------------------------------------------------
Line 302:
filtered_preds.sql: SELECT students.ssn FROM students ORDER BY students.other_student_details ASC
filtered_dev.sql: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
--------------------------------------------------
Line 303:
filtered_preds.sql: SELECT sections.section_name FROM sections WHERE sections.section_name = 'h'
filtered_dev.sql: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
--------------------------------------------------
Line 304:
filtered_preds.sql: SELECT sections.section_description FROM sections WHERE sections.section_name = 'h'
filtered_dev.sql: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
--------------------------------------------------
Line 305:
filtered_preds.sql: SELECT cartoon.title FROM cartoon ORDER BY cartoon.title ASC
filtered_dev.sql: SELECT avg(transcript_date) FROM Transcripts
--------------------------------------------------
Line 306:
filtered_preds.sql: SELECT cartoon.title FROM cartoon ORDER BY cartoon.title ASC
filtered_dev.sql: SELECT avg(transcript_date) FROM Transcripts
--------------------------------------------------
Line 307:
filtered_preds.sql: SELECT cartoon.directed_by FROM cartoon WHERE cartoon.directed_by = 'Ben Jones'
filtered_dev.sql: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
--------------------------------------------------
Line 308:
filtered_preds.sql: SELECT cartoon.title FROM cartoon WHERE cartoon.directed_by = 'Ben Jones'
filtered_dev.sql: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
--------------------------------------------------
Line 309:
filtered_preds.sql: SELECT COUNT( * ) FROM cartoon WHERE cartoon.written_by = 'Joseph Kuhr'
filtered_dev.sql: SELECT count(*) FROM Transcripts
--------------------------------------------------
Line 310:
filtered_preds.sql: SELECT COUNT( * ) FROM cartoon WHERE cartoon.written_by = 'Joseph Kuhr'
filtered_dev.sql: SELECT count(*) FROM Transcripts
--------------------------------------------------
Line 311:
filtered_preds.sql: SELECT cartoon.title , cartoon.directed_by FROM cartoon ORDER BY cartoon.original_air_date ASC
filtered_dev.sql: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
--------------------------------------------------
Line 312:
filtered_preds.sql: SELECT cartoon.title , cartoon.directed_by FROM cartoon ORDER BY cartoon.original_air_date ASC
filtered_dev.sql: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
--------------------------------------------------
Line 313:
filtered_preds.sql: SELECT cartoon.title FROM cartoon WHERE cartoon.directed_by = 'Ben Jones' OR cartoon.directed_by = 'Brandon Vietti'
filtered_dev.sql: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 314:
filtered_preds.sql: SELECT cartoon.title FROM cartoon WHERE cartoon.directed_by = 'Ben Jones' OR cartoon.directed_by = 'Brandon Vietti'
filtered_dev.sql: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 315:
filtered_preds.sql: SELECT tv_channel.country , COUNT( * ) FROM tv_channel GROUP BY tv_channel.country ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT count(DISTINCT current_address_id) FROM Students
--------------------------------------------------
Line 316:
filtered_preds.sql: SELECT tv_channel.country , COUNT( * ) FROM tv_channel GROUP BY tv_channel.country ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT count(DISTINCT current_address_id) FROM Students
--------------------------------------------------
Line 317:
filtered_preds.sql: SELECT COUNT( DISTINCT tv_channel.series_name ) , tv_channel.content FROM tv_channel
filtered_dev.sql: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
--------------------------------------------------
Line 318:
filtered_preds.sql: SELECT COUNT( DISTINCT tv_channel.series_name ) , tv_channel.content FROM tv_channel
filtered_dev.sql: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
--------------------------------------------------
Line 319:
filtered_preds.sql: SELECT tv_channel.content FROM tv_channel WHERE tv_channel.series_name = 'Sky Radio'
filtered_dev.sql: SELECT section_description FROM Sections WHERE section_name  =  'h'
--------------------------------------------------
Line 320:
filtered_preds.sql: SELECT tv_channel.content FROM tv_channel WHERE tv_channel.series_name = 'Sky Radio'
filtered_dev.sql: SELECT section_description FROM Sections WHERE section_name  =  'h'
--------------------------------------------------
Line 321:
filtered_preds.sql: SELECT tv_channel.package_option FROM tv_channel WHERE tv_channel.series_name = 'Sky Radio'
filtered_dev.sql: SELECT Title FROM Cartoon ORDER BY title
--------------------------------------------------
Line 322:
filtered_preds.sql: SELECT tv_channel.package_option FROM tv_channel WHERE tv_channel.series_name = 'Sky Radio'
filtered_dev.sql: SELECT Title FROM Cartoon ORDER BY title
--------------------------------------------------
Line 323:
filtered_preds.sql: SELECT COUNT( * ) FROM tv_channel WHERE tv_channel.language = 'English'
filtered_dev.sql: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
--------------------------------------------------
Line 324:
filtered_preds.sql: SELECT COUNT( * ) FROM tv_channel WHERE tv_channel.language = 'English'
filtered_dev.sql: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
--------------------------------------------------
Line 325:
filtered_preds.sql: SELECT tv_channel.language , COUNT( * ) FROM tv_channel GROUP BY tv_channel.language ORDER BY COUNT( tv_channel.language ) ASC LIMIT 1
filtered_dev.sql: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
--------------------------------------------------
Line 326:
filtered_preds.sql: SELECT tv_channel.language , COUNT( * ) FROM tv_channel GROUP BY tv_channel.language ORDER BY COUNT( * ) ASC LIMIT 1
filtered_dev.sql: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
--------------------------------------------------
Line 327:
filtered_preds.sql: SELECT tv_channel.language , COUNT( * ) FROM tv_channel GROUP BY tv_channel.language
filtered_dev.sql: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
--------------------------------------------------
Line 328:
filtered_preds.sql: SELECT tv_channel.language , COUNT( * ) FROM tv_channel GROUP BY tv_channel.language
filtered_dev.sql: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
--------------------------------------------------
Line 329:
filtered_preds.sql: SELECT tv_series.episode FROM tv_series ORDER BY tv_series.rating ASC
filtered_dev.sql: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
--------------------------------------------------
Line 330:
filtered_preds.sql: SELECT tv_series.episode FROM tv_series ORDER BY tv_series.rating ASC
filtered_dev.sql: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
--------------------------------------------------
Line 331:
filtered_preds.sql: SELECT tv_series.episode , tv_series.rating FROM tv_series ORDER BY tv_series.rating DESC LIMIT 3
filtered_dev.sql: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
--------------------------------------------------
Line 332:
filtered_preds.sql: SELECT tv_series.episode , tv_series.rating FROM tv_series ORDER BY tv_series.rating DESC LIMIT 3
filtered_dev.sql: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
--------------------------------------------------
Line 333:
filtered_preds.sql: SELECT MIN( tv_series.share ) , MAX( tv_series.share ) FROM tv_series
filtered_dev.sql: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
--------------------------------------------------
Line 334:
filtered_preds.sql: SELECT MAX( tv_series.share ) , MIN( tv_series.share ) FROM tv_series
filtered_dev.sql: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
--------------------------------------------------
Line 335:
filtered_preds.sql: SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
filtered_dev.sql: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
--------------------------------------------------
Line 336:
filtered_preds.sql: SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
filtered_dev.sql: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
--------------------------------------------------
Line 337:
filtered_preds.sql: SELECT tv_series.weekly_rank FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
filtered_dev.sql: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
--------------------------------------------------
Line 338:
filtered_preds.sql: SELECT tv_series.weekly_rank FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
filtered_dev.sql: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
--------------------------------------------------
Line 339:
filtered_preds.sql: SELECT COUNT( * ) , cartoon.directed_by FROM cartoon GROUP BY cartoon.directed_by
filtered_dev.sql: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
--------------------------------------------------
Line 340:
filtered_preds.sql: SELECT cartoon.directed_by , COUNT( * ) FROM cartoon GROUP BY cartoon.directed_by
filtered_dev.sql: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
--------------------------------------------------
Line 341:
filtered_preds.sql: SELECT cartoon.production_code , cartoon.channel FROM cartoon ORDER BY cartoon.original_air_date DESC LIMIT 1
filtered_dev.sql: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
--------------------------------------------------
Line 342:
filtered_preds.sql: SELECT cartoon.production_code , cartoon.channel FROM cartoon ORDER BY cartoon.original_air_date DESC LIMIT 1
filtered_dev.sql: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
--------------------------------------------------
Line 343:
filtered_preds.sql: SELECT tv_channel.package_option , tv_channel.series_name FROM tv_channel WHERE tv_channel.hight_definition_tv = 'TV'
filtered_dev.sql: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
--------------------------------------------------
Line 344:
filtered_preds.sql: SELECT tv_channel.series_name , tv_channel.package_option FROM tv_channel WHERE tv_channel.hight_definition_tv = 'yes'
filtered_dev.sql: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
--------------------------------------------------
Line 345:
filtered_preds.sql: SELECT tv_channel.pixel_aspect_ratio_par , tv_channel.country FROM tv_channel WHERE tv_channel.language != 'English'
filtered_dev.sql: SELECT Episode FROM TV_series ORDER BY rating
--------------------------------------------------
Line 346:
filtered_preds.sql: SELECT tv_channel.country , tv_channel.pixel_aspect_ratio_par FROM tv_channel WHERE tv_channel.language != 'English'
filtered_dev.sql: SELECT Episode FROM TV_series ORDER BY rating
--------------------------------------------------
Line 347:
filtered_preds.sql: SELECT tv_channel.id FROM tv_channel GROUP BY tv_channel.id HAVING COUNT( * ) > 2
filtered_dev.sql: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
--------------------------------------------------
Line 348:
filtered_preds.sql: SELECT tv_channel.id FROM tv_channel GROUP BY tv_channel.id HAVING COUNT( * ) > 2
filtered_dev.sql: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
--------------------------------------------------
Line 349:
filtered_preds.sql: SELECT COUNT( * ) FROM poker_player
filtered_dev.sql: SELECT max(SHARE) , min(SHARE) FROM TV_series;
--------------------------------------------------
Line 350:
filtered_preds.sql: SELECT COUNT( * ) FROM poker_player
filtered_dev.sql: SELECT max(SHARE) , min(SHARE) FROM TV_series;
--------------------------------------------------
Line 351:
filtered_preds.sql: SELECT poker_player.earnings FROM poker_player ORDER BY poker_player.earnings DESC
filtered_dev.sql: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
--------------------------------------------------
Line 352:
filtered_preds.sql: SELECT poker_player.earnings FROM poker_player ORDER BY poker_player.earnings DESC
filtered_dev.sql: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
--------------------------------------------------
Line 353:
filtered_preds.sql: SELECT poker_player.final_table_made , poker_player.best_finish FROM poker_player
filtered_dev.sql: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
--------------------------------------------------
Line 354:
filtered_preds.sql: SELECT poker_player.final_table_made , poker_player.best_finish FROM poker_player
filtered_dev.sql: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
--------------------------------------------------
Line 355:
filtered_preds.sql: SELECT AVG( poker_player.earnings ) FROM poker_player
filtered_dev.sql: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
--------------------------------------------------
Line 356:
filtered_preds.sql: SELECT AVG( poker_player.earnings ) FROM poker_player
filtered_dev.sql: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
--------------------------------------------------
Line 357:
filtered_preds.sql: SELECT poker_player.money_rank FROM poker_player ORDER BY poker_player.earnings DESC LIMIT 1
filtered_dev.sql: select production_code ,  channel from cartoon order by original_air_date desc limit 1
--------------------------------------------------
Line 358:
filtered_preds.sql: SELECT poker_player.money_rank FROM poker_player ORDER BY poker_player.earnings DESC LIMIT 1
filtered_dev.sql: select production_code ,  channel from cartoon order by original_air_date desc limit 1
--------------------------------------------------
Line 359:
filtered_preds.sql: SELECT MAX( poker_player.final_table_made ) FROM poker_player WHERE poker_player.earnings<200000
filtered_dev.sql: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
--------------------------------------------------
Line 360:
filtered_preds.sql: SELECT MAX( poker_player.final_table_made ) FROM poker_player WHERE poker_player.earnings<200000
filtered_dev.sql: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
--------------------------------------------------
Line 361:
filtered_preds.sql: SELECT people.nationality , COUNT( * ) FROM people GROUP BY people.nationality
filtered_dev.sql: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
--------------------------------------------------
Line 362:
filtered_preds.sql: SELECT people.nationality , COUNT( * ) FROM people GROUP BY people.nationality
filtered_dev.sql: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
--------------------------------------------------
Line 363:
filtered_preds.sql: SELECT people.nationality FROM people GROUP BY people.nationality ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
--------------------------------------------------
Line 364:
filtered_preds.sql: SELECT people.nationality FROM people GROUP BY people.nationality ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
--------------------------------------------------
Line 365:
filtered_preds.sql: SELECT people.nationality FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
filtered_dev.sql: SELECT count(*) FROM poker_player
--------------------------------------------------
Line 366:
filtered_preds.sql: SELECT people.nationality FROM people GROUP BY people.nationality HAVING COUNT( * ) >= 2
filtered_dev.sql: SELECT count(*) FROM poker_player
--------------------------------------------------
Line 367:
filtered_preds.sql: SELECT people.name , people.birth_date FROM people ORDER BY people.name ASC
filtered_dev.sql: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
--------------------------------------------------
Line 368:
filtered_preds.sql: SELECT people.name , people.birth_date FROM people ORDER BY people.name ASC
filtered_dev.sql: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
--------------------------------------------------
Line 369:
filtered_preds.sql: SELECT people.name FROM people WHERE people.nationality != 'Russia'
filtered_dev.sql: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
--------------------------------------------------
Line 370:
filtered_preds.sql: SELECT people.name FROM people WHERE people.nationality != 'Russia'
filtered_dev.sql: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
--------------------------------------------------
Line 371:
filtered_preds.sql: SELECT COUNT( DISTINCT people.nationality ) FROM people
filtered_dev.sql: SELECT avg(Earnings) FROM poker_player
--------------------------------------------------
Line 372:
filtered_preds.sql: SELECT COUNT( DISTINCT people.nationality ) FROM people
filtered_dev.sql: SELECT avg(Earnings) FROM poker_player
--------------------------------------------------
Line 373:
filtered_preds.sql: SELECT COUNT( * ) FROM area_code_state
filtered_dev.sql: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
--------------------------------------------------
Line 374:
filtered_preds.sql: SELECT contestants.contestant_number , contestants.contestant_name FROM contestants ORDER BY contestants.contestant_name DESC
filtered_dev.sql: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
--------------------------------------------------
Line 375:
filtered_preds.sql: SELECT votes.vote_id , votes.phone_number , votes.state FROM votes
filtered_dev.sql: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
--------------------------------------------------
Line 376:
filtered_preds.sql: SELECT MAX( area_code_state.area_code ) , MIN( area_code_state.area_code ) FROM area_code_state
filtered_dev.sql: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
--------------------------------------------------
Line 377:
filtered_preds.sql: SELECT MAX( votes.created ) FROM votes WHERE votes.state = 'CA'
filtered_dev.sql: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
--------------------------------------------------
Line 378:
filtered_preds.sql: SELECT contestants.contestant_name FROM contestants WHERE contestants.contestant_name != 'Jessie Alloway'
filtered_dev.sql: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
--------------------------------------------------
Line 379:
filtered_preds.sql: SELECT DISTINCT votes.state , votes.created FROM votes
filtered_dev.sql: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
--------------------------------------------------
Line 380:
filtered_preds.sql: SELECT COUNT( * ) FROM votes WHERE votes.state = 'NY' OR votes.state = 'CA'
filtered_dev.sql: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
--------------------------------------------------
Line 381:
filtered_preds.sql: SELECT contestants.contestant_name FROM contestants WHERE contestants.contestant_name LIKE '%Al%'
filtered_dev.sql: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
--------------------------------------------------
Line 382:
filtered_preds.sql: SELECT country.name FROM country WHERE country.indepyear > 1950
filtered_dev.sql: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
--------------------------------------------------
Line 383:
filtered_preds.sql: SELECT country.name FROM country WHERE country.indepyear > 1950
filtered_dev.sql: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
--------------------------------------------------
Line 384:
filtered_preds.sql: SELECT COUNT( * ) FROM country WHERE country.governmentform = 'republic'
filtered_dev.sql: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
--------------------------------------------------
Line 385:
filtered_preds.sql: SELECT COUNT( * ) FROM country WHERE country.governmentform = 'republic'
filtered_dev.sql: SELECT Name FROM people WHERE Nationality != "Russia"
--------------------------------------------------
Line 386:
filtered_preds.sql: SELECT SUM( country.surfacearea ) FROM country WHERE country.region = 'Caribbean'
filtered_dev.sql: SELECT Name FROM people WHERE Nationality != "Russia"
--------------------------------------------------
Line 387:
filtered_preds.sql: SELECT SUM( country.surfacearea ) FROM country WHERE country.region = 'Carribean'
filtered_dev.sql: SELECT count(DISTINCT Nationality) FROM people
--------------------------------------------------
Line 388:
filtered_preds.sql: SELECT country.continent FROM country WHERE country.name = 'Anguilla'
filtered_dev.sql: SELECT count(DISTINCT Nationality) FROM people
--------------------------------------------------
Line 389:
filtered_preds.sql: SELECT country.continent FROM country WHERE country.name = 'Anguilla'
filtered_dev.sql: SELECT count(*) FROM area_code_state
--------------------------------------------------
Line 390:
filtered_preds.sql: SELECT country.population , country.lifeexpectancy FROM country WHERE country.name = 'Brazil'
filtered_dev.sql: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
--------------------------------------------------
Line 391:
filtered_preds.sql: SELECT country.population , country.lifeexpectancy FROM country WHERE country.name = 'Brazil'
filtered_dev.sql: SELECT vote_id ,  phone_number ,  state FROM votes
--------------------------------------------------
Line 392:
filtered_preds.sql: SELECT country.region , country.population FROM country WHERE country.name = 'Angola'
filtered_dev.sql: SELECT max(area_code) ,  min(area_code) FROM area_code_state
--------------------------------------------------
Line 393:
filtered_preds.sql: SELECT country.region , country.population FROM country WHERE country.name = 'Angola'
filtered_dev.sql: SELECT max(created) FROM votes WHERE state  =  'CA'
--------------------------------------------------
Line 394:
filtered_preds.sql: SELECT AVG( country.lifeexpectancy ) FROM country WHERE country.region = 'Central Africa'
filtered_dev.sql: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
--------------------------------------------------
Line 395:
filtered_preds.sql: SELECT AVG( country.lifeexpectancy ) FROM country WHERE country.region = 'Central Africa'
filtered_dev.sql: SELECT DISTINCT state ,  created FROM votes
--------------------------------------------------
Line 396:
filtered_preds.sql: SELECT country.name FROM country WHERE country.region = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
filtered_dev.sql: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
--------------------------------------------------
Line 397:
filtered_preds.sql: SELECT country.name FROM country WHERE country.region = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
filtered_dev.sql: select contestant_name from contestants where contestant_name like "%al%"
--------------------------------------------------
Line 398:
filtered_preds.sql: SELECT SUM( country.population ) , MAX( country.gnp ) FROM country WHERE country.region = 'Asia'
filtered_dev.sql: SELECT Name FROM country WHERE IndepYear  >  1950
--------------------------------------------------
Line 399:
filtered_preds.sql: SELECT country.gnp FROM country WHERE country.region = 'Asia' ORDER BY country.gnp DESC LIMIT 1
filtered_dev.sql: SELECT Name FROM country WHERE IndepYear  >  1950
--------------------------------------------------
Line 400:
filtered_preds.sql: SELECT AVG( country.lifeexpectancy ) FROM country WHERE country.region = 'African' AND country.governmentform = 'republic'
filtered_dev.sql: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
--------------------------------------------------
Line 401:
filtered_preds.sql: SELECT AVG( country.lifeexpectancy ) FROM country WHERE country.continent = 'Africa' AND country.governmentform = 'Africa'
filtered_dev.sql: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
--------------------------------------------------
Line 402:
filtered_preds.sql: SELECT SUM( country.surfacearea ) FROM country WHERE country.continent = 'Asia' OR country.region = 'Europe'
filtered_dev.sql: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
--------------------------------------------------
Line 403:
filtered_preds.sql: SELECT SUM( country.surfacearea ) FROM country WHERE country.region = 'Asia' OR country.region = 'Europe'
filtered_dev.sql: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
--------------------------------------------------
Line 404:
filtered_preds.sql: SELECT SUM( city.population ) FROM city WHERE city.district = 'Gelderland'
filtered_dev.sql: SELECT Continent FROM country WHERE Name  =  "Anguilla"
--------------------------------------------------
Line 405:
filtered_preds.sql: SELECT SUM( city.population ) FROM city WHERE city.district = 'Gelderland'
filtered_dev.sql: SELECT Continent FROM country WHERE Name  =  "Anguilla"
--------------------------------------------------
Line 406:
filtered_preds.sql: SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.governmentform = 'US territory'
filtered_dev.sql: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
--------------------------------------------------
Line 407:
filtered_preds.sql: SELECT AVG( country.gnp ) , SUM( country.population ) FROM country WHERE country.region = 'US territory'
filtered_dev.sql: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
--------------------------------------------------
Line 408:
filtered_preds.sql: SELECT COUNT( DISTINCT countrylanguage.language ) FROM countrylanguage
filtered_dev.sql: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
--------------------------------------------------
Line 409:
filtered_preds.sql: SELECT COUNT( DISTINCT countrylanguage.language ) FROM countrylanguage
filtered_dev.sql: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
--------------------------------------------------
Line 410:
filtered_preds.sql: SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.region = 'Africa'
filtered_dev.sql: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
--------------------------------------------------
Line 411:
filtered_preds.sql: SELECT COUNT( DISTINCT country.governmentform ) FROM country WHERE country.region = 'Africa'
filtered_dev.sql: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
--------------------------------------------------
Line 412:
filtered_preds.sql: SELECT country.name , country.population , country.lifeexpectancy FROM country WHERE country.region = 'asian' ORDER BY country.surfacearea DESC LIMIT 1
filtered_dev.sql: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
--------------------------------------------------
Line 413:
filtered_preds.sql: SELECT country.name , country.population , country.lifeexpectancy FROM country WHERE country.region = 'Asian' ORDER BY country.surfacearea DESC LIMIT 1
filtered_dev.sql: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
--------------------------------------------------
Line 414:
filtered_preds.sql: SELECT country.name FROM country WHERE country.surfacearea > (SELECT MAX( country.surfacearea ) FROM country WHERE country.region = 'Europe')
filtered_dev.sql: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
--------------------------------------------------
Line 415:
filtered_preds.sql: SELECT country.name FROM country WHERE country.surfacearea > (SELECT MAX( country.surfacearea ) FROM country WHERE country.region = 'Europe')
filtered_dev.sql: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
--------------------------------------------------
Line 416:
filtered_preds.sql: SELECT country.name FROM country WHERE country.population<(SELECT MAX( country.population ) FROM country WHERE country.region = 'Asia')
filtered_dev.sql: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
--------------------------------------------------
Line 417:
filtered_preds.sql: SELECT country.name FROM country WHERE country.population<(SELECT MIN( country.population ) FROM country WHERE country.continent = 'African' AND country.region = 'Asia')
filtered_dev.sql: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
--------------------------------------------------
Line 418:
filtered_preds.sql: SELECT country.name FROM country WHERE country.population > (SELECT MAX( country.population ) FROM country WHERE country.region = 'Africa')
filtered_dev.sql: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
--------------------------------------------------
Line 419:
filtered_preds.sql: SELECT country.name FROM country WHERE country.population > (SELECT MAX( country.population ) FROM country WHERE country.region = 'Africa')
filtered_dev.sql: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
--------------------------------------------------
Line 420:
filtered_preds.sql: SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English'
filtered_dev.sql: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
--------------------------------------------------
Line 421:
filtered_preds.sql: SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language != 'English'
filtered_dev.sql: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
--------------------------------------------------
Line 422:
filtered_preds.sql: SELECT country.name , country.indepyear , country.surfacearea FROM country ORDER BY country.population ASC LIMIT 1
filtered_dev.sql: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
--------------------------------------------------
Line 423:
filtered_preds.sql: SELECT country.name , country.indepyear , country.surfacearea FROM country ORDER BY country.population ASC LIMIT 1
filtered_dev.sql: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
--------------------------------------------------
Line 424:
filtered_preds.sql: SELECT country.population , country.name , country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1
filtered_dev.sql: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
--------------------------------------------------
Line 425:
filtered_preds.sql: SELECT country.name , country.population , country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1
filtered_dev.sql: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
--------------------------------------------------
Line 426:
filtered_preds.sql: SELECT COUNT( * ) , city.district FROM city WHERE city.population > (SELECT AVG( city.population ) FROM city) GROUP BY city.district
filtered_dev.sql: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
--------------------------------------------------
Line 427:
filtered_preds.sql: SELECT COUNT( * ) , city.district FROM city WHERE city.population > (SELECT AVG( city.population ) FROM city) GROUP BY city.district
filtered_dev.sql: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
--------------------------------------------------
Line 428:
filtered_preds.sql: SELECT country.governmentform , SUM( country.population ) FROM country GROUP BY country.governmentform HAVING AVG( country.lifeexpectancy ) > 72
filtered_dev.sql: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
--------------------------------------------------
Line 429:
filtered_preds.sql: SELECT SUM( country.population ) , country.governmentform FROM country GROUP BY country.governmentform HAVING AVG( country.lifeexpectancy ) > 72
filtered_dev.sql: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
--------------------------------------------------
Line 430:
filtered_preds.sql: SELECT country.continent , SUM( country.population ) FROM country WHERE country.lifeexpectancy<72 GROUP BY country.continent
filtered_dev.sql: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
--------------------------------------------------
Line 431:
filtered_preds.sql: SELECT country.continent , SUM( country.population ) FROM country WHERE country.lifeexpectancy<72 GROUP BY country.continent
filtered_dev.sql: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
--------------------------------------------------
Line 432:
filtered_preds.sql: SELECT country.name , country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5
filtered_dev.sql: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
--------------------------------------------------
Line 433:
filtered_preds.sql: SELECT country.name , country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5
filtered_dev.sql: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
--------------------------------------------------
Line 436:
filtered_preds.sql: SELECT country.name FROM country ORDER BY country.population ASC LIMIT 3
filtered_dev.sql: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
--------------------------------------------------
Line 437:
filtered_preds.sql: SELECT country.name FROM country ORDER BY country.population ASC LIMIT 3
filtered_dev.sql: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
--------------------------------------------------
Line 438:
filtered_preds.sql: SELECT COUNT( * ) FROM country WHERE country.region = 'Asia'
filtered_dev.sql: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
--------------------------------------------------
Line 439:
filtered_preds.sql: SELECT COUNT( * ) FROM country WHERE country.region = 'Asia'
filtered_dev.sql: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
--------------------------------------------------
Line 440:
filtered_preds.sql: SELECT country.name FROM country WHERE country.continent = 'Europe' AND country.population = 80000
filtered_dev.sql: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
--------------------------------------------------
Line 441:
filtered_preds.sql: SELECT country.name FROM country WHERE country.region = 'Europe' AND country.population = 80000
filtered_dev.sql: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
--------------------------------------------------
Line 442:
filtered_preds.sql: SELECT SUM( country.population ) , AVG( country.surfacearea ) FROM country WHERE country.continent = 'North America' HAVING AVG( country.surfacearea ) > 3000
filtered_dev.sql: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
--------------------------------------------------
Line 443:
filtered_preds.sql: SELECT SUM( country.population ) , AVG( country.surfacearea ) FROM country WHERE country.region = 'North America' AND country.surfacearea > 3000
filtered_dev.sql: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
--------------------------------------------------
Line 444:
filtered_preds.sql: SELECT city.name FROM city WHERE city.population BETWEEN 160000 and 900000
filtered_dev.sql: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
--------------------------------------------------
Line 445:
filtered_preds.sql: SELECT city.name FROM city WHERE city.population BETWEEN 160000 and 900000
filtered_dev.sql: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
--------------------------------------------------
Line 446:
filtered_preds.sql: SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
--------------------------------------------------
Line 447:
filtered_preds.sql: SELECT countrylanguage.language FROM countrylanguage GROUP BY countrylanguage.language ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
--------------------------------------------------
Line 448:
filtered_preds.sql: SELECT countrylanguage.language FROM countrylanguage ORDER BY countrylanguage.percentage DESC LIMIT 1
filtered_dev.sql: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
--------------------------------------------------
Line 449:
filtered_preds.sql: SELECT countrylanguage.countrycode , MAX( countrylanguage.percentage ) FROM countrylanguage GROUP BY countrylanguage.countrycode
filtered_dev.sql: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
--------------------------------------------------
Line 450:
filtered_preds.sql: SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'Spanish' ORDER BY countrylanguage.percentage DESC LIMIT 1
filtered_dev.sql: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
--------------------------------------------------
Line 451:
filtered_preds.sql: SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'Spanish'
filtered_dev.sql: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
--------------------------------------------------
Line 452:
filtered_preds.sql: SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.language = 'Spanish' ORDER BY countrylanguage.percentage DESC LIMIT 1
filtered_dev.sql: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
--------------------------------------------------
Line 453:
filtered_preds.sql: SELECT countrylanguage.countrycode FROM countrylanguage WHERE countrylanguage.percentage > (SELECT AVG( countrylanguage.percentage ) FROM countrylanguage WHERE countrylanguage.language = 'Spanish')
filtered_dev.sql: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
--------------------------------------------------
Line 454:
filtered_preds.sql: SELECT COUNT( * ) FROM conductor
filtered_dev.sql: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
--------------------------------------------------
Line 455:
filtered_preds.sql: SELECT COUNT( * ) FROM conductor
filtered_dev.sql: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
--------------------------------------------------
Line 456:
filtered_preds.sql: SELECT conductor.name FROM conductor ORDER BY conductor.age ASC
filtered_dev.sql: SELECT count(*) FROM country WHERE continent  =  "Asia"
--------------------------------------------------
Line 457:
filtered_preds.sql: SELECT conductor.name FROM conductor ORDER BY conductor.age ASC
filtered_dev.sql: SELECT count(*) FROM country WHERE continent  =  "Asia"
--------------------------------------------------
Line 458:
filtered_preds.sql: SELECT conductor.name FROM conductor WHERE conductor.nationality != 'USA'
filtered_dev.sql: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
--------------------------------------------------
Line 459:
filtered_preds.sql: SELECT conductor.name FROM conductor WHERE conductor.nationality != 'USA'
filtered_dev.sql: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
--------------------------------------------------
Line 460:
filtered_preds.sql: SELECT orchestra.record_company FROM orchestra ORDER BY orchestra.year_of_founded DESC
filtered_dev.sql: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
--------------------------------------------------
Line 461:
filtered_preds.sql: SELECT orchestra.record_company FROM orchestra ORDER BY orchestra.year_of_founded DESC
filtered_dev.sql: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
--------------------------------------------------
Line 462:
filtered_preds.sql: SELECT AVG( show.attendance ) FROM show
filtered_dev.sql: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
--------------------------------------------------
Line 463:
filtered_preds.sql: SELECT AVG( show.attendance ) FROM show
filtered_dev.sql: select name from city where population between 160000 and 900000
--------------------------------------------------
Line 464:
filtered_preds.sql: SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type != 'Live final'
filtered_dev.sql: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 465:
filtered_preds.sql: SELECT MAX( performance.share ) , MIN( performance.share ) FROM performance WHERE performance.type != 'Live final'
filtered_dev.sql: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 466:
filtered_preds.sql: SELECT COUNT( DISTINCT conductor.nationality ) FROM conductor
filtered_dev.sql: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
--------------------------------------------------
Line 467:
filtered_preds.sql: SELECT COUNT( DISTINCT conductor.nationality ) FROM conductor
filtered_dev.sql: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
--------------------------------------------------
Line 468:
filtered_preds.sql: SELECT conductor.name FROM conductor ORDER BY conductor.year_of_work DESC
filtered_dev.sql: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
--------------------------------------------------
Line 469:
filtered_preds.sql: SELECT conductor.name FROM conductor ORDER BY conductor.year_of_work DESC
filtered_dev.sql: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
--------------------------------------------------
Line 470:
filtered_preds.sql: SELECT conductor.name FROM conductor ORDER BY conductor.year_of_work DESC LIMIT 1
filtered_dev.sql: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
--------------------------------------------------
Line 471:
filtered_preds.sql: SELECT conductor.name FROM conductor ORDER BY conductor.year_of_work DESC LIMIT 1
filtered_dev.sql: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
--------------------------------------------------
Line 472:
filtered_preds.sql: SELECT orchestra.record_company , COUNT( * ) FROM orchestra GROUP BY orchestra.record_company
filtered_dev.sql: SELECT count(*) FROM conductor
--------------------------------------------------
Line 473:
filtered_preds.sql: SELECT orchestra.record_company , COUNT( * ) FROM orchestra GROUP BY orchestra.record_company
filtered_dev.sql: SELECT count(*) FROM conductor
--------------------------------------------------
Line 474:
filtered_preds.sql: SELECT orchestra.major_record_format FROM orchestra GROUP BY orchestra.major_record_format ORDER BY COUNT( * ) ASC
filtered_dev.sql: SELECT Name FROM conductor ORDER BY Age ASC
--------------------------------------------------
Line 475:
filtered_preds.sql: SELECT orchestra.major_record_format FROM orchestra GROUP BY orchestra.major_record_format ORDER BY COUNT( * ) ASC
filtered_dev.sql: SELECT Name FROM conductor ORDER BY Age ASC
--------------------------------------------------
Line 476:
filtered_preds.sql: SELECT orchestra.record_company FROM orchestra GROUP BY orchestra.record_company ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT Name FROM conductor WHERE Nationality != 'USA'
--------------------------------------------------
Line 477:
filtered_preds.sql: SELECT orchestra.record_company FROM orchestra GROUP BY orchestra.record_company ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT Name FROM conductor WHERE Nationality != 'USA'
--------------------------------------------------
Line 480:
filtered_preds.sql: SELECT COUNT( * ) FROM orchestra WHERE orchestra.major_record_format = 'CD' OR orchestra.major_record_format = 'DVD'
filtered_dev.sql: SELECT avg(Attendance) FROM SHOW
--------------------------------------------------
Line 481:
filtered_preds.sql: SELECT COUNT( * ) FROM orchestra WHERE orchestra.major_record_format = 'CD' OR orchestra.major_record_format = 'DVD'
filtered_dev.sql: SELECT avg(Attendance) FROM SHOW
--------------------------------------------------
Line 482:
filtered_preds.sql: SELECT COUNT( * ) FROM highschooler
filtered_dev.sql: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
--------------------------------------------------
Line 483:
filtered_preds.sql: SELECT COUNT( * ) FROM highschooler
filtered_dev.sql: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
--------------------------------------------------
Line 484:
filtered_preds.sql: SELECT highschooler.name , highschooler.grade FROM highschooler
filtered_dev.sql: SELECT count(DISTINCT Nationality) FROM conductor
--------------------------------------------------
Line 485:
filtered_preds.sql: SELECT highschooler.name , highschooler.grade FROM highschooler
filtered_dev.sql: SELECT count(DISTINCT Nationality) FROM conductor
--------------------------------------------------
Line 486:
filtered_preds.sql: SELECT DISTINCT highschooler.grade FROM highschooler
filtered_dev.sql: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
--------------------------------------------------
Line 487:
filtered_preds.sql: SELECT highschooler.grade FROM highschooler
filtered_dev.sql: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
--------------------------------------------------
Line 488:
filtered_preds.sql: SELECT highschooler.grade FROM highschooler WHERE highschooler.name = 'Kyle'
filtered_dev.sql: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
--------------------------------------------------
Line 489:
filtered_preds.sql: SELECT highschooler.grade FROM highschooler WHERE highschooler.name = 'Kyle'
filtered_dev.sql: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
--------------------------------------------------
Line 490:
filtered_preds.sql: SELECT highschooler.name FROM highschooler WHERE highschooler.grade = 10
filtered_dev.sql: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
--------------------------------------------------
Line 491:
filtered_preds.sql: SELECT highschooler.name FROM highschooler WHERE highschooler.grade = 10
filtered_dev.sql: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
--------------------------------------------------
Line 492:
filtered_preds.sql: SELECT highschooler.id FROM highschooler WHERE highschooler.name = 'Kyle'
filtered_dev.sql: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
--------------------------------------------------
Line 493:
filtered_preds.sql: SELECT highschooler.id FROM highschooler WHERE highschooler.name = 'Kyle'
filtered_dev.sql: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
--------------------------------------------------
Line 494:
filtered_preds.sql: SELECT COUNT( * ) FROM highschooler WHERE highschooler.grade = 9 OR highschooler.grade = 10
filtered_dev.sql: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
--------------------------------------------------
Line 495:
filtered_preds.sql: SELECT COUNT( * ) FROM highschooler WHERE highschooler.grade = 9 OR highschooler.grade = 10
filtered_dev.sql: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
--------------------------------------------------
Line 496:
filtered_preds.sql: SELECT highschooler.grade , COUNT( * ) FROM highschooler GROUP BY highschooler.grade
filtered_dev.sql: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
--------------------------------------------------
Line 497:
filtered_preds.sql: SELECT COUNT( * ) , highschooler.grade FROM highschooler GROUP BY highschooler.grade
filtered_dev.sql: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
--------------------------------------------------
Line 498:
filtered_preds.sql: SELECT highschooler.grade FROM highschooler GROUP BY highschooler.grade ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
--------------------------------------------------
Line 499:
filtered_preds.sql: SELECT highschooler.grade FROM highschooler GROUP BY highschooler.grade ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
--------------------------------------------------
Line 500:
filtered_preds.sql: SELECT highschooler.grade FROM highschooler GROUP BY highschooler.grade HAVING COUNT( * ) >= 4
filtered_dev.sql: SELECT count(*) FROM Highschooler
--------------------------------------------------
Line 501:
filtered_preds.sql: SELECT highschooler.grade FROM highschooler GROUP BY highschooler.grade HAVING COUNT( * ) >= 4
filtered_dev.sql: SELECT count(*) FROM Highschooler
--------------------------------------------------
Line 502:
filtered_preds.sql: SELECT friend.student_id , COUNT( * ) FROM friend GROUP BY friend.student_id
filtered_dev.sql: SELECT name ,  grade FROM Highschooler
--------------------------------------------------
Line 503:
filtered_preds.sql: SELECT friend.student_id , COUNT( * ) FROM friend GROUP BY friend.student_id
filtered_dev.sql: SELECT name ,  grade FROM Highschooler
--------------------------------------------------
Line 504:
filtered_preds.sql: SELECT COUNT( * ) , likes.student_id FROM likes GROUP BY likes.student_id
filtered_dev.sql: SELECT grade FROM Highschooler
--------------------------------------------------
Line 505:
filtered_preds.sql: SELECT likes.student_id , COUNT( * ) FROM likes GROUP BY likes.student_id
filtered_dev.sql: SELECT grade FROM Highschooler
--------------------------------------------------
Line 506:
filtered_preds.sql: SELECT professionals.first_name FROM professionals
filtered_dev.sql: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
--------------------------------------------------
Line 507:
filtered_preds.sql: SELECT professionals.first_name FROM professionals
filtered_dev.sql: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
--------------------------------------------------
Line 508:
filtered_preds.sql: SELECT professionals.email_address FROM professionals WHERE professionals.state = 'Hawaii' OR professionals.state = 'Wisconsin'
filtered_dev.sql: SELECT name FROM Highschooler WHERE grade  =  10
--------------------------------------------------
Line 509:
filtered_preds.sql: SELECT professionals.email_address FROM professionals WHERE professionals.state = 'Hawaii' OR professionals.state = 'Wisconsin'
filtered_dev.sql: SELECT name FROM Highschooler WHERE grade  =  10
--------------------------------------------------
Line 510:
filtered_preds.sql: SELECT dogs.date_arrived , dogs.date_departed FROM dogs
filtered_dev.sql: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
--------------------------------------------------
Line 511:
filtered_preds.sql: SELECT dogs.date_arrived , dogs.date_departed FROM dogs
filtered_dev.sql: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
--------------------------------------------------
Line 512:
filtered_preds.sql: SELECT COUNT( DISTINCT treatments.dog_id ) FROM treatments
filtered_dev.sql: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
--------------------------------------------------
Line 513:
filtered_preds.sql: SELECT COUNT( DISTINCT treatments.dog_id ) FROM treatments
filtered_dev.sql: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
--------------------------------------------------
Line 514:
filtered_preds.sql: SELECT COUNT( DISTINCT treatments.professional_id ) FROM treatments
filtered_dev.sql: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
--------------------------------------------------
Line 515:
filtered_preds.sql: SELECT COUNT( DISTINCT treatments.professional_id ) FROM treatments
filtered_dev.sql: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
--------------------------------------------------
Line 516:
filtered_preds.sql: SELECT professionals.role_code , professionals.city , professionals.street , professionals.state FROM professionals WHERE professionals.city LIKE '%West%'
filtered_dev.sql: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 517:
filtered_preds.sql: SELECT professionals.role_code , professionals.street , professionals.city , professionals.state FROM professionals WHERE professionals.city LIKE '%West%'
filtered_dev.sql: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
--------------------------------------------------
Line 518:
filtered_preds.sql: SELECT owners.first_name , owners.last_name , owners.email_address FROM owners WHERE owners.state LIKE '%North%'
filtered_dev.sql: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
--------------------------------------------------
Line 519:
filtered_preds.sql: SELECT owners.first_name , owners.last_name , owners.email_address FROM owners WHERE owners.state LIKE '%North%'
filtered_dev.sql: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
--------------------------------------------------
Line 520:
filtered_preds.sql: SELECT COUNT( * ) FROM dogs WHERE dogs.age<(SELECT AVG( dogs.age ) FROM dogs)
filtered_dev.sql: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
--------------------------------------------------
Line 521:
filtered_preds.sql: SELECT COUNT( * ) FROM dogs WHERE dogs.age<(SELECT AVG( dogs.age ) FROM dogs)
filtered_dev.sql: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
--------------------------------------------------
Line 522:
filtered_preds.sql: SELECT treatments.cost_of_treatment FROM treatments ORDER BY treatments.cost_of_treatment DESC LIMIT 1
filtered_dev.sql: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
--------------------------------------------------
Line 523:
filtered_preds.sql: SELECT treatments.cost_of_treatment FROM treatments ORDER BY treatments.date_of_treatment DESC LIMIT 1
filtered_dev.sql: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
--------------------------------------------------
Line 524:
filtered_preds.sql: SELECT dogs.name , dogs.age , dogs.weight FROM dogs WHERE dogs.abandoned_yn = 'yes' OR dogs.abandoned_yn = 'no'
filtered_dev.sql: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
--------------------------------------------------
Line 525:
filtered_preds.sql: SELECT dogs.name , dogs.age , dogs.weight FROM dogs WHERE dogs.abandoned_yn = 'yes' OR dogs.abandoned_yn = 'no'
filtered_dev.sql: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
--------------------------------------------------
Line 526:
filtered_preds.sql: SELECT AVG( dogs.age ) FROM dogs
filtered_dev.sql: SELECT date_arrived ,  date_departed FROM Dogs
--------------------------------------------------
Line 527:
filtered_preds.sql: SELECT AVG( dogs.age ) FROM dogs
filtered_dev.sql: SELECT date_arrived ,  date_departed FROM Dogs
--------------------------------------------------
Line 528:
filtered_preds.sql: SELECT dogs.age FROM dogs ORDER BY dogs.age DESC LIMIT 1
filtered_dev.sql: SELECT count(DISTINCT dog_id) FROM Treatments
--------------------------------------------------
Line 529:
filtered_preds.sql: SELECT dogs.age FROM dogs ORDER BY dogs.age DESC LIMIT 1
filtered_dev.sql: SELECT count(DISTINCT dog_id) FROM Treatments
--------------------------------------------------
Line 530:
filtered_preds.sql: SELECT charges.charge_type , charges.charge_amount FROM charges
filtered_dev.sql: SELECT count(DISTINCT professional_id) FROM Treatments
--------------------------------------------------
Line 531:
filtered_preds.sql: SELECT charges.charge_type , charges.charge_amount FROM charges
filtered_dev.sql: SELECT count(DISTINCT professional_id) FROM Treatments
--------------------------------------------------
Line 532:
filtered_preds.sql: SELECT SUM( charges.charge_amount ) FROM charges ORDER BY charges.charge_type DESC LIMIT 1
filtered_dev.sql: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
--------------------------------------------------
Line 533:
filtered_preds.sql: SELECT charges.charge_amount FROM charges ORDER BY charges.charge_type DESC LIMIT 1
filtered_dev.sql: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
--------------------------------------------------
Line 534:
filtered_preds.sql: SELECT professionals.email_address , professionals.cell_number , professionals.home_phone FROM professionals
filtered_dev.sql: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
--------------------------------------------------
Line 535:
filtered_preds.sql: SELECT professionals.email_address , professionals.cell_number , professionals.home_phone FROM professionals
filtered_dev.sql: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
--------------------------------------------------
Line 536:
filtered_preds.sql: SELECT DISTINCT dogs.breed_code , dogs.size_code FROM dogs
filtered_dev.sql: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
--------------------------------------------------
Line 537:
filtered_preds.sql: SELECT COUNT( * ) FROM singer
filtered_dev.sql: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
--------------------------------------------------
Line 538:
filtered_preds.sql: SELECT COUNT( * ) FROM singer
filtered_dev.sql: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
--------------------------------------------------
Line 539:
filtered_preds.sql: SELECT singer.name FROM singer ORDER BY singer.net_worth_millions ASC
filtered_dev.sql: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
--------------------------------------------------
Line 540:
filtered_preds.sql: SELECT singer.name FROM singer ORDER BY singer.net_worth_millions ASC
filtered_dev.sql: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
--------------------------------------------------
Line 541:
filtered_preds.sql: SELECT singer.birth_year , singer.citizenship FROM singer
filtered_dev.sql: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
--------------------------------------------------
Line 542:
filtered_preds.sql: SELECT singer.birth_year , singer.citizenship FROM singer
filtered_dev.sql: SELECT avg(age) FROM Dogs
--------------------------------------------------
Line 543:
filtered_preds.sql: SELECT singer.name FROM singer WHERE singer.citizenship != 'France'
filtered_dev.sql: SELECT avg(age) FROM Dogs
--------------------------------------------------
Line 544:
filtered_preds.sql: SELECT singer.name FROM singer WHERE singer.citizenship != 'French'
filtered_dev.sql: SELECT max(age) FROM Dogs
--------------------------------------------------
Line 545:
filtered_preds.sql: SELECT singer.name FROM singer WHERE singer.birth_year = 1948 OR singer.birth_year = 1949
filtered_dev.sql: SELECT max(age) FROM Dogs
--------------------------------------------------
Line 546:
filtered_preds.sql: SELECT singer.name FROM singer WHERE singer.birth_year = 1948 OR singer.birth_year = 1949
filtered_dev.sql: SELECT charge_type ,  charge_amount FROM Charges
--------------------------------------------------
Line 547:
filtered_preds.sql: SELECT singer.name FROM singer ORDER BY singer.net_worth_millions DESC LIMIT 1
filtered_dev.sql: SELECT charge_type ,  charge_amount FROM Charges
--------------------------------------------------
Line 548:
filtered_preds.sql: SELECT singer.name FROM singer ORDER BY singer.net_worth_millions DESC LIMIT 1
filtered_dev.sql: SELECT max(charge_amount) FROM Charges
--------------------------------------------------
Line 549:
filtered_preds.sql: SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship
filtered_dev.sql: SELECT max(charge_amount) FROM Charges
--------------------------------------------------
Line 550:
filtered_preds.sql: SELECT singer.citizenship , COUNT( * ) FROM singer GROUP BY singer.citizenship
filtered_dev.sql: SELECT email_address ,  cell_number ,  home_phone FROM professionals
--------------------------------------------------
Line 551:
filtered_preds.sql: SELECT singer.citizenship FROM singer GROUP BY singer.citizenship ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT email_address ,  cell_number ,  home_phone FROM professionals
--------------------------------------------------
Line 552:
filtered_preds.sql: SELECT singer.citizenship FROM singer GROUP BY singer.citizenship ORDER BY COUNT( * ) DESC LIMIT 1
filtered_dev.sql: SELECT DISTINCT breed_code ,  size_code FROM dogs
--------------------------------------------------
Line 553:
filtered_preds.sql: SELECT singer.citizenship , MAX( singer.net_worth_millions ) FROM singer GROUP BY singer.citizenship
filtered_dev.sql: SELECT DISTINCT breed_code ,  size_code FROM dogs
--------------------------------------------------
Line 554:
filtered_preds.sql: SELECT MAX( singer.net_worth_millions ) , singer.citizenship FROM singer GROUP BY singer.citizenship
filtered_dev.sql: SELECT count(*) FROM singer
--------------------------------------------------
Line 555:
filtered_preds.sql: SELECT singer.citizenship FROM singer WHERE singer.birth_year<1945 INTERSECT SELECT singer.citizenship FROM singer WHERE singer.birth_year > 1955
filtered_dev.sql: SELECT count(*) FROM singer
--------------------------------------------------
Line 556:
filtered_preds.sql: SELECT singer.citizenship FROM singer WHERE singer.birth_year<1945 INTERSECT SELECT singer.citizenship FROM singer WHERE singer.birth_year > 1955
filtered_dev.sql: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
--------------------------------------------------
Line 557:
filtered_preds.sql: SELECT COUNT( * ) FROM other_available_features
filtered_dev.sql: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
--------------------------------------------------
Line 558:
filtered_preds.sql: SELECT properties.property_name FROM properties WHERE properties.room_count > 1
filtered_dev.sql: SELECT Birth_Year ,  Citizenship FROM singer
--------------------------------------------------
Line 559:
filtered_preds.sql: 
filtered_dev.sql: SELECT Birth_Year ,  Citizenship FROM singer
--------------------------------------------------
Line 560:
filtered_preds.sql: 
filtered_dev.sql: SELECT Name FROM singer WHERE Citizenship != "France"
--------------------------------------------------
Line 561:
filtered_preds.sql: 
filtered_dev.sql: SELECT Name FROM singer WHERE Citizenship != "France"
--------------------------------------------------
Line 562:
filtered_preds.sql: 
filtered_dev.sql: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
--------------------------------------------------
Line 563:
filtered_preds.sql: 
filtered_dev.sql: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
--------------------------------------------------
Line 564:
filtered_preds.sql: 
filtered_dev.sql: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
--------------------------------------------------
Line 565:
filtered_preds.sql: 
filtered_dev.sql: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
--------------------------------------------------
Line 566:
filtered_preds.sql: 
filtered_dev.sql: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
--------------------------------------------------
Line 567:
filtered_preds.sql: 
filtered_dev.sql: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
--------------------------------------------------
Line 568:
filtered_preds.sql: 
filtered_dev.sql: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
--------------------------------------------------
Line 569:
filtered_preds.sql: 
filtered_dev.sql: select citizenship from singer group by citizenship order by count(*) desc limit 1
--------------------------------------------------
Line 570:
filtered_preds.sql: 
filtered_dev.sql: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
--------------------------------------------------
Line 571:
filtered_preds.sql: 
filtered_dev.sql: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
--------------------------------------------------
Line 572:
filtered_preds.sql: 
filtered_dev.sql: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
--------------------------------------------------
Line 573:
filtered_preds.sql: 
filtered_dev.sql: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
--------------------------------------------------
Line 574:
filtered_preds.sql: 
filtered_dev.sql: SELECT count(*) FROM Other_Available_Features
--------------------------------------------------
Line 575:
filtered_preds.sql: 
filtered_dev.sql: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
--------------------------------------------------
